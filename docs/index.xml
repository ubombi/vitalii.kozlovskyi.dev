<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Personal buzzwords repository</title><link>https://vitalii.kozlovskyi.dev/</link><description>Recent content on Personal buzzwords repository</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 06 Apr 2022 21:13:18 +0200</lastBuildDate><atom:link href="https://vitalii.kozlovskyi.dev/index.xml" rel="self" type="application/rss+xml"/><item><title>Replication Flow</title><link>https://vitalii.kozlovskyi.dev/posts/replication-flow/</link><pubDate>Wed, 06 Apr 2022 21:13:18 +0200</pubDate><guid>https://vitalii.kozlovskyi.dev/posts/replication-flow/</guid><description>TBD: diagram
1. Create replication slot This way, you preserve WAL (new changes) from being deleted. This would also create a snapshot of a current state. Snapshot can be exported, or reused in current transaction. 2. Import existing data. In replication only changes are streamed. Current state needs to be backuped manually. Physical replication: There is a mechanism to make a backup of a running server, called &amp;ldquo;base backup&amp;rdquo;.</description></item><item><title>What is Postgres Write-Ahead Log</title><link>https://vitalii.kozlovskyi.dev/posts/wtf-is-wal/</link><pubDate>Wed, 06 Apr 2022 20:29:11 +0200</pubDate><guid>https://vitalii.kozlovskyi.dev/posts/wtf-is-wal/</guid><description>Write-Ahead Log docs As it states in name, it&amp;rsquo;s log that&amp;rsquo;s written BEFORE any actual changes are made.
The most important thing, WAL can be replayed and will always give same result. Being compact binary representation of operations and minimal data used in them, gives us few functions:
Ability to restore after crash Replicate data by transfering log segments and replaying them in replica nodes. Replacing multiple random writes with single sequential write.</description></item><item><title>Building multiarch docker images for Go</title><link>https://vitalii.kozlovskyi.dev/posts/building-docker-images-for-go/</link><pubDate>Tue, 05 Apr 2022 08:03:26 +0200</pubDate><guid>https://vitalii.kozlovskyi.dev/posts/building-docker-images-for-go/</guid><description>How to build small multiarch image using Github Workflow</description></item><item><title>Move Resources Between Different TF States</title><link>https://vitalii.kozlovskyi.dev/posts/move-tf-resources-between-different-states/</link><pubDate>Mon, 06 Dec 2021 18:01:34 +0100</pubDate><guid>https://vitalii.kozlovskyi.dev/posts/move-tf-resources-between-different-states/</guid><description>Copy-paste example of terraform states manipulation.</description></item><item><title>Postgres and Elasticsearch Realtime Sync</title><link>https://vitalii.kozlovskyi.dev/posts/intro-into-logical-decoding/</link><pubDate>Mon, 22 Nov 2021 14:11:47 +0100</pubDate><guid>https://vitalii.kozlovskyi.dev/posts/intro-into-logical-decoding/</guid><description>The power of sequential WAL decoding.</description></item><item><title>CheatSheet</title><link>https://vitalii.kozlovskyi.dev/cheatsheet/</link><pubDate>Mon, 22 Nov 2021 01:18:48 +0100</pubDate><guid>https://vitalii.kozlovskyi.dev/cheatsheet/</guid><description>Bash # Run command if binaty exists without additional output command -v echo &amp;amp;&amp;gt; /dev/null &amp;amp;&amp;amp; echo &amp;#34;works&amp;#34; command -v thefuck &amp;amp;&amp;gt; /dev/null &amp;amp;&amp;amp; eval $(thefuck --alias) # default value for variable/argument loglevel=${1:-info} # ${name:-value} Git # Always use ssh keys instead of asking for a password. git config --global url.ssh://git@github.com/.insteadOf https://github.com/ # Commit signing git config --global user.signingkey SOMEKEYID! # Choose Key; note ending `!` git config --global commit.gpgsign true # Auto sign without `-S` # note: You can set up different keys per each repo.</description></item><item><title>Cozy And Efficient Tech Interview</title><link>https://vitalii.kozlovskyi.dev/posts/tech-interview/</link><pubDate>Sun, 21 Nov 2021 23:09:49 +0100</pubDate><guid>https://vitalii.kozlovskyi.dev/posts/tech-interview/</guid><description>What if candidate is smarter than you?.. How to check knowledge and experience within few hours?..</description></item><item><title>GPG Hardware Key and Git Signing</title><link>https://vitalii.kozlovskyi.dev/posts/gpg-hardware-key-and-git-signing/</link><pubDate>Sun, 21 Nov 2021 23:08:59 +0100</pubDate><guid>https://vitalii.kozlovskyi.dev/posts/gpg-hardware-key-and-git-signing/</guid><description>Weird behavior when usign subkeys. The mistery of exclamation mark.</description></item></channel></rss>